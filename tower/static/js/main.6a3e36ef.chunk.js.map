{"version":3,"sources":["page/Home/common/constants.ts","page/Home/components/Header/index.tsx","page/Home/components/Card/index.tsx","page/Home/components/DeviceProgress/index.tsx","page/Home/reducer/homeReducer.ts","page/Home/components/DeviceDetails/index.tsx","page/Home/common/utils.ts","page/Home/components/RealTimeData/index.tsx","page/Home/components/AlarmPie/index.tsx","page/Home/components/AlarmRecord/index.tsx","page/Home/components/HistoricalLine/index.tsx","page/Home/components/HistoricalData/index.tsx","page/Home/index.tsx","reportWebVitals.ts","index.tsx"],"names":["ETableDataName","Header","className","Card","props","title","children","DeviceProgress","moleculeNumber","denominatorNumber","type","width","percent","format","memo","EHomeDispatchType","TABLE_TAG_COLOR","yaw","roll","pitch","TABLE_ALARM_VALUE","DEVICE_COLOR","DeviceDetails","onlineDevice","normalDevice","initalHomeState","currentDevice","deviceDataList","homeReducer","state","action","SET_DEVIECE","SET_CURRENT_DEVICE","getCurrentData","dataList","filter","data","u_id","Option","Select","Column","Table","RealTimeData","homeDispatch","useState","tableData","setTableData","useEffect","length","setTimeout","currentData","realTimeData","key","dataName","currentValue","formatData","JSON","stringify","value","undefined","style","onChange","Array","from","map","index","dataSource","pagination","dataIndex","render","color","obj","size","AlarmPie","pieData","config","height","appendPadding","angleField","colorField","radius","innerRadius","interactions","statistic","offsetY","fontSize","formatter","datum","content","reduce","r","d","Object","defineProperty","enumerable","configurable","writable","AlarmRecord","alarmData","setAlarmData","modalStatus","setModalStatus","setPieData","newAlarmData","reverse","item","onClick","visible","onCancel","footer","textTag","push","tag","createDate","HistoricalLine","lineData","xField","yField","seriesField","yAxis","label","v","concat","replace","s","HistoricalData","setLineData","newLineData","i","category","Home","useReducer","homeState","loopTimer","useRef","getData","axios","get","then","res","current","setInterval","clearInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"+VAKYA,E,mECYGC,G,OARA,kBACb,qBAAKC,UAAU,mBAAf,SACE,qBAAKA,UAAU,yBAAf,8ECgBWC,G,OAde,SAACC,GAAW,IAChCC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OACE,sBAAKJ,UAAU,iBAAf,UACE,qBAAKA,UAAU,uBAAf,SACGG,IAEH,qBAAKH,UAAU,uBAAf,SACGI,S,SCLHC,G,OAA4C,SAACH,GAAW,IACpDI,EAA6CJ,EAA7CI,eAAgBC,EAA6BL,EAA7BK,kBAAmBJ,EAAUD,EAAVC,MAE3C,OACE,sBAAKH,UAAU,iCAAf,UACE,cAAC,IAAD,CACEQ,KAAK,SACLC,MAAO,IACPC,QAAUJ,EAAiBC,EAAqB,IAChDI,OAAQ,2BAASL,EAAT,YAA2BC,MAErC,qBAAKP,UAAU,uCAAf,SACGG,SAMMS,iBAAKP,G,iBH7BRP,K,UAAAA,E,YAAAA,E,eAAAA,M,KAKL,IIGKe,EJHCC,GAAe,mBACzBhB,EAAeiB,IAAM,QADI,cAEzBjB,EAAekB,KAAO,YAFG,cAGzBlB,EAAemB,MAAQ,UAHE,GAKfC,GAAiB,mBAC3BpB,EAAeiB,IAAM,IADM,cAE3BjB,EAAekB,KAAO,IAFK,cAG3BlB,EAAemB,MAAQ,IAHI,GAMjBE,EAAe,CAAC,UAAW,SAAU,UAAW,YKEvDC,G,OAA0C,SAAClB,GAAW,IAClDmB,EAA+BnB,EAA/BmB,aAAcC,EAAiBpB,EAAjBoB,aAEtB,OACE,eAAC,EAAD,CAAMnB,MAAO,2BAAb,UACE,sBAAKH,UAAU,8BAAf,UACE,qBAAKA,UAAU,uBACf,sBAAKA,UAAU,sBAAf,UACE,qBAAKA,UAAU,2BAAf,SL/B+B,kJKkC/B,qBAAKA,UAAU,2BAAf,SLjC8B,6EKsClC,sBAAKA,UAAU,gCAAf,UACE,cAAC,EAAD,CACEM,eAAgBe,EAChBd,kBLvCmB,EKwCnBJ,MAAO,qDAET,cAAC,EAAD,CACEG,eAAgBgB,EAChBf,kBAAmBc,EACnBlB,MAAO,yEAOFS,iBAAKQ,G,2CDjDPG,EAAoC,CAC/CF,aAAc,EACdC,aAAc,EACdE,cAAe,EACfC,eAAgB,K,SAGNZ,K,0BAAAA,E,yCAAAA,M,KAaL,IAAMa,EAA2B,SAACC,EAAOC,GAC9C,OAAQA,EAAOpB,MACb,KAAKK,EAAkBgB,YACrB,OAAO,2BACFF,GADL,IAEEN,aAAcO,EAAOP,aACrBC,aAAcM,EAAON,aACrBG,eAAgBG,EAAOH,iBAE3B,KAAKZ,EAAkBiB,mBACrB,OAAO,2BACFH,GADL,IAEEH,cAAeI,EAAOJ,gBAE1B,QACE,OAAOG,IEvCAI,EAAiB,SAACC,EAAsBR,GACnD,OAAOQ,EAASC,QAAO,SAAAC,GACrB,OAAOA,EAAKC,MAAQX,MCiBhBY,G,OAAWC,IAAXD,QACAE,EAAWC,IAAXD,OASFE,EAAwC,SAACtC,GAAW,IAChDsB,EAA8DtB,EAA9DsB,cAAeF,EAA+CpB,EAA/CoB,aAAcG,EAAiCvB,EAAjCuB,eAAgBgB,EAAiBvC,EAAjBuC,aADE,EAErBC,mBAAoB,IAFC,mBAEhDC,EAFgD,KAErCC,EAFqC,KA2CvD,OAVAC,qBAAU,WACHvB,GAAiBG,EAAeqB,SAGrCF,EAAa,IACbG,YAAW,WACTH,EA5Be,SAACnB,EAA4BD,GAC9C,IAAMwB,EAAcjB,EAAeN,EAAgBD,GAC7CyB,EAAeD,EAAYA,EAAYF,OAAS,GACtD,MAAO,CACL,CACEI,IAAK,IACLC,SAAU,MACVC,aAAcH,EAAalC,KAE7B,CACEmC,IAAK,IACLC,SAAU,OACVC,aAAcH,EAAajC,MAE7B,CACEkC,IAAK,IACLC,SAAU,QACVC,aAAcH,EAAahC,QAWhBoC,CAAW5B,EAAgBD,MACvC,QACF,CAACA,EAAeF,EAAcgC,KAAKC,UAAU9B,KAG9C,eAAC,EAAD,CAAMtB,MAAO,2BAAb,UACE,sBAAKH,UAAU,gCAAf,UACE,qBAAKA,UAAU,8BAAf,4CAGA,cAAC,IAAD,CACEwD,MAAOlC,EAAeE,OAAgBiC,EACtCC,MAAO,CAAEjD,MAAO,KAChBkD,SAhDS,SAACH,GAChBf,EAAa,CACXjC,KAAMK,EAAkBiB,mBACxBN,cAAegC,KA0Cb,SAKII,MAAMC,KAAK,CAAEf,OAAQxB,IAAgBwC,KACnC,SAACN,EAAOO,GACN,OACE,eAAC3B,EAAD,CAEEoB,MAAOO,EAAQ,EAFjB,UAIGA,EAAQ,EAJX,8DACuCA,YAWnD,qBAAK/D,UAAU,+BAAf,SAGWsB,EAKDqB,EAAUG,OAEV,eAAC,IAAD,CACEkB,WAAYrB,EACZsB,YAAY,EAFd,UAIE,cAAC3B,EAAD,CACEnC,MAAM,iCACN+D,UAAU,WAEVC,OAAQ,SAACX,GACP,OACE,cAAC,IAAD,CAAKY,MAAOtD,EAAgB0C,GAA5B,SACGA,GADsCA,KAHzC,YASN,cAAClB,EAAD,CACEnC,MAAM,qBACN+D,UAAU,eAEVC,OAAQ,SAACX,EAAOa,GACd,OACE,sBAAMrE,UAAS,qCAAgCwD,GAAStC,EAAkBmD,EAAIlB,UAAY,QAAU,WAApG,SACGK,MAJH,gBASN,cAAClB,EAAD,CACEnC,MAAM,qBACN+D,UAAU,aAEVC,OAAQ,SAACX,EAAOa,GACd,OACE,cAAC,WAAD,UACGnD,EAAkBmD,EAAIlB,cAJzB,iBAYL,cAAC,IAAD,CAAMmB,KAAK,UAhDd,qBAAKtE,UAAU,uBAwDhBY,iBAAK4B,G,0BC1Jd+B,EAAgC,SAACrE,GAAW,IAEvBmE,EAAUnB,EAAUM,EADrCgB,EAAYtE,EAAZsE,QAeFC,GAduCjB,EA6C3C,CAAC,CAAEhD,KAAM,0BA7CwB0C,EA4CjC,kBA5CuBmB,EAevB,CACE5D,MAAO,IACPiE,OAAQ,IACRC,cAAe,GACfzC,KAAMsC,EACNI,WAAY,QACZC,WAAY,OACZC,OAAQ,GACRC,YAAa,GACbC,aAAc,CAAC,CAAExE,KAAM,oBAAsB,CAAEA,KAAM,mBACrDyE,UAAW,CACT9E,MAAO,CACL+E,SAAU,GACVxB,MAAO,CAAEyB,SAAU,IACnBC,UAAW,SAAmBC,GAC5B,OAAOA,EAAQA,EAAM7E,KAAO,iBAGhC8E,QAAS,CACPJ,QAAS,GACTxB,MAAO,CAAEyB,SAAU,IACnBC,UAAW,SAAmBC,EAAYnD,GACxC,MAAY,UAALmD,EACAA,EAAM7B,MACNtB,EAAKqD,QAAO,SAAUC,EAAQC,GAAS,OAAOD,EAAIC,EAAEjC,QAAS,GAFxD,eAnClBkC,OAAOC,eAAetB,EAAKnB,EAAK,CAC9BM,MAAOA,EACPoC,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZzB,EAAInB,GAAOM,EAENa,GAsCT,OAAO,cAAC,IAAD,eAASI,KAEH7D,iBAAK2D,GChCdwB,G,OAAsC,SAAC7F,GACDA,EAAlCsB,cAD8C,IAC/BC,EAAmBvB,EAAnBuB,eAD8B,EAEnBiB,mBAAqB,IAFF,mBAE9CsD,EAF8C,KAEnCC,EAFmC,OAGfvD,oBAAkB,GAHH,mBAG9CwD,EAH8C,KAGjCC,EAHiC,OAIvBzD,mBAA+C,IAJxB,mBAI9C8B,EAJ8C,KAIrC4B,EAJqC,KAoBrD,OAdAvD,qBAAU,WACR,GAAKpB,EAAeqB,OAApB,CAGA,IH9ByBd,EG8BnBqE,GH9BmBrE,EG8BSP,EH7B7BO,EAASC,QAAO,SAAAC,GACrB,OAAOA,EAAKpC,EAAeiB,MAAQG,EAAkBpB,EAAeiB,MAC/DmB,EAAKpC,EAAekB,OAASE,EAAkBpB,EAAekB,OAC9DkB,EAAKpC,EAAemB,QAAUC,EAAkBpB,EAAemB,WG0BlBqF,UAClDL,EAAaI,GACbD,EAAWxC,MAAMC,KAAK,CAAEf,OTrCC,ISqCwBgB,KAAI,SAACyC,EAAMxC,GAC1D,MAAO,CACLvD,KAAK,GAAD,OAAKuD,EAAQ,EAAb,sBACJP,MAAOzB,EAAesE,EAActC,EAAQ,GAAGjB,eAGlD,CAACQ,KAAKC,UAAU9B,KAGjB,eAAC,EAAD,CAAMtB,MAAO,2BAAb,UACE,cAAC,IAAD,CACEH,UAAU,mBACVQ,KAAM,UACNgG,QAAS,kBAAML,GAAe,IAHhC,sCAOA,qBAAKnG,UAAU,mBAAf,SACE,cAAC,EAAD,CAAUwE,QAASA,MAErB,cAAC,IAAD,CACErE,MAAM,2BACNsG,QAASP,EACTQ,SAAU,kBAAMP,GAAe,IAC/BQ,OAAQ,CACN,cAAC,IAAD,CAAmBH,QAAS,kBAAML,GAAe,IAAjD,yBAAY,SALhB,SAUE,qBAAKnG,UAAU,2BAAf,SAEIgG,EAAUlC,KAAI,SAACyC,EAAMxC,GACnB,IAAM6C,EAAU,GAKhB,OAJAL,EAAKzG,EAAemB,QAAUC,EAAkBpB,EAAemB,QAAU2F,EAAQC,KAAK/G,EAAemB,OACrGsF,EAAKzG,EAAekB,OAASE,EAAkBpB,EAAekB,OAAS4F,EAAQC,KAAK/G,EAAekB,MACnGuF,EAAKzG,EAAeiB,MAAQG,EAAkBpB,EAAeiB,MAAQ6F,EAAQC,KAAK/G,EAAeiB,KAG/F,sBAEEf,UAAU,0BAFZ,UAIE,eAAC,IAAD,CAAKoE,MAAOjD,EAAaoF,EAAKpE,KAAO,GAArC,UACGoE,EAAKpE,KADR,wBAGA,sBAAKnC,UAAU,+BAAf,2CAEG4G,EAAQ9C,KACP,SAACgD,EAAK/C,GACJ,OACE,eAAC,IAAD,CAEEK,MAAOtD,EAAgBgG,GAFzB,UAIGhH,EAAegH,GAJlB,iDACsCA,EADtC,YAC6C/C,OANrD,0FAgBA,sBAAK/D,UAAU,+BAAf,2CACQuG,EAAKQ,gBAxBf,kCACkChD,gBAmCnCnD,iBAAKmF,GC5GdiB,EAA4C,SAAC9G,GAAW,IAGxDuE,EAAS,CACXhE,MAAO,IACPyB,KAJmBhC,EAAb+G,SAKNC,OAAQ,aACRC,OAAQ,QACRC,YAAa,WACbC,MAAO,CACLC,MAAO,CACLlC,UAAW,SAAmBmC,GAC5B,MAAO,GAAGC,OAAOD,GAAGE,QAAQ,yBAAyB,SAAUC,GAC7D,MAAO,GAAGF,OAAOE,EAAG,WAK5BtD,MAAO,CAAC,UAAW,UAAW,YAEhC,OAAO,cAAC,IAAD,eAAUK,KAGJ7D,iBAAKoG,GCPdW,G,OAA4C,SAACzH,GAAW,IACpDoB,EAAgDpB,EAAhDoB,aAAcE,EAAkCtB,EAAlCsB,cAAeC,EAAmBvB,EAAnBuB,eADsB,EAE3BiB,mBAAoB,IAFO,mBAEpDuE,EAFoD,KAE1CW,EAF0C,KA+B3D,OA3BA/E,qBAAU,WACR,GAAKpB,EAAeqB,OAApB,CAKA,IAFA,IAAME,EAAcjB,EAAeN,EAAgBD,GAC7CqG,EAAyB,GACtBC,EAAI,EAAGA,EAAI9E,EAAYF,OAAQgF,IAAK,CAAC,IAAD,EACD9E,EAAoB8E,GAAtDf,EADmC,EACnCA,WAAY9F,EADuB,EACvBA,MAAOF,EADgB,EAChBA,IAAKC,EADW,EACXA,KAChC6G,EAAYhB,KAAK,CACfE,aACAvD,MAAOvC,EACP8G,SAAUjI,EAAc,QAE1B+H,EAAYhB,KAAK,CACfE,aACAvD,MAAOzC,EACPgH,SAAUjI,EAAc,MAE1B+H,EAAYhB,KAAK,CACfE,aACAvD,MAAOxC,EACP+G,SAAUjI,EAAc,OAG5B8H,EAAYC,MACX,CAACvE,KAAKC,UAAU9B,GAAiBD,IAGlC,cAAC,EAAD,CAAMrB,MAAO,2BAAb,SACE,qBAAKH,UAAU,4BAAf,SAESsB,EAKD2F,EAASnE,OAET,cAAC,EAAD,CAAgBmE,SAAUA,IAGvB,cAAC,IAAD,CAAM3C,KAAK,UARd,qBAAKtE,UAAU,uBAedY,iBAAK+G,GCULK,G,OAlEF,WAAO,IAAD,EACiBC,qBAAwBvG,EAAaH,GADtD,mBACV2G,EADU,KACCzF,EADD,KAEX0F,EAAYC,iBAAY,MAFb,EASbF,EAJF7G,oBALe,MAKA,EALA,IASb6G,EAHF5G,oBANe,MAMA,EANA,IASb4G,EAFF1G,qBAPe,MAOC,EAPD,IASb0G,EADFzG,sBARe,MAQE,GARF,EAWX4G,EAAU,WACdC,IAAMC,IAAI,kFAAkFC,MAAK,SAAAC,GAC/FhG,EAAa,CACXjC,KAAMK,EAAkBgB,YACxBR,aAAc,EACdC,aAAc,EACdG,eAAgBgH,EAAIvG,KAAKA,WAiB/B,OAZAW,qBAAU,WAOR,OANAwF,IAEAF,EAAUO,QAAUC,aAAY,WAC9BN,MACC,KAEI,WACLO,cAAcT,EAAUO,YAEzB,IAGD,sBAAK1I,UAAU,iBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,aAAf,UAEE,cAAC,EAAD,CACEqB,aAAcA,EACdC,aAAcA,IAGhB,cAAC,EAAD,CACEE,cAAeA,EACfF,aAAcA,EACdG,eAAgBA,EAChBgB,aAAcA,IAGhB,cAAC,EAAD,CACEjB,cAAeA,EACfC,eAAgBA,IAGlB,cAAC,EAAD,CACEH,aAAcA,EACdE,cAAeA,EACfC,eAAgBA,YChEXoH,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBP,MAAK,YAAkD,IAA/CQ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASlF,OACP,cAAC,EAAD,IACAmF,SAASC,eAAe,SAM1BV,M","file":"static/js/main.6a3e36ef.chunk.js","sourcesContent":["export const DEVICE_DETAILS_INFO_TITLE = '基于IPv6和LPWAN技术的输电杆塔倾斜度监测预警与管理系统';\nexport const DEVICE_DETAILS_INFO_DESC = '所属用户：东北农业大学';\n\nexport const DEVICE_NUMBER = 4;\n\nexport enum ETableDataName {\n  yaw = 'yaw',\n  roll = 'roll',\n  pitch = 'pitch'\n}\nexport const TABLE_TAG_COLOR = {\n  [ETableDataName.yaw]: 'blue',\n  [ETableDataName.roll]: 'geekblue',\n  [ETableDataName.pitch]: 'purple'\n};\nexport const TABLE_ALARM_VALUE = {\n  [ETableDataName.yaw]: 15,\n  [ETableDataName.roll]: 15,\n  [ETableDataName.pitch]: 15\n};\n\nexport const DEVICE_COLOR = ['volcano', 'orange', 'magenta', 'geekblue']","/**\n * @file 头部组件\n * @author Felix\n */\n\nimport React from 'react';\n\nimport './index.css';\n\nconst Header = () => (\n  <div className=\"header-container\">\n    <div className=\"header-container-title\">\n      输电杆塔状态监控平台\n    </div>\n  </div>\n);\n\nexport default Header;","/**\n * @file 通用卡片\n * @author Felix\n */\n\nimport React from 'react';\n\nimport './index.css';\n\ninterface ICard {\n  title: string;\n}\n\nconst Card: React.FC<ICard> = (props) => {\n  const { title, children } = props;\n  return (\n    <div className=\"home-card-item\">\n      <div className=\"home-card-item-title\">\n        {title}\n      </div>\n      <div className=\"home-card-item-inner\">\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","/**\n * @file 设备详情状态条\n * @author Felix\n */\n\nimport React, { memo } from 'react';\nimport { Progress } from 'antd';\n\nimport './index.css';\n\ninterface IDeviceProgress {\n  moleculeNumber: number;\n  denominatorNumber: number;\n  title: string;\n}\n\nconst DeviceProgress: React.FC<IDeviceProgress> = (props) => {\n  const { moleculeNumber, denominatorNumber, title } = props;\n\n  return (\n    <div className=\"device-details-number-progress\">\n      <Progress\n        type=\"circle\"\n        width={150}\n        percent={(moleculeNumber / denominatorNumber) * 100}\n        format={() => `${moleculeNumber}/${denominatorNumber}`}\n      />\n      <div className=\"device-details-number-progress-title\">\n        {title}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DeviceProgress);","export interface IInitalHomeState {\n  onlineDevice?: number;\n  normalDevice?: number;\n  currentDevice?: number;\n  deviceDataList?: Array<any>;\n}\nexport const initalHomeState: IInitalHomeState = {\n  onlineDevice: 0,\n  normalDevice: 0,\n  currentDevice: 1,\n  deviceDataList: []\n};\n\nexport enum EHomeDispatchType {\n  SET_DEVIECE = 'SET_DEVIECE',\n  SET_CURRENT_DEVICE = 'SET_CURRENT_DEVICE'\n}\nexport interface IHomeDispatchAction {\n  type: EHomeDispatchType;\n  onlineDevice?: number;\n  normalDevice?: number;\n  currentDevice?: number;\n  deviceDataList?: Array<any>;\n}\nexport type HomeReducer = React.Reducer<IInitalHomeState, IHomeDispatchAction>\n\nexport const homeReducer: HomeReducer = (state, action) => {\n  switch (action.type) {\n    case EHomeDispatchType.SET_DEVIECE:\n      return {\n        ...state,\n        onlineDevice: action.onlineDevice,\n        normalDevice: action.normalDevice,\n        deviceDataList: action.deviceDataList\n      };\n    case EHomeDispatchType.SET_CURRENT_DEVICE:\n      return {\n        ...state,\n        currentDevice: action.currentDevice\n      }\n    default:\n      return state;\n  }\n};","/**\n * @file 设备详情\n * @author Felix\n */\n\nimport React, { memo } from 'react';\n\nimport Card from '../Card';\nimport DeviceProgress from '../DeviceProgress';\n\nimport {\n  DEVICE_DETAILS_INFO_TITLE,\n  DEVICE_DETAILS_INFO_DESC,\n  DEVICE_NUMBER\n} from '../../common/constants';\n\nimport './index.css';\n\ninterface IDeviceDetails {\n  onlineDevice: number;\n  normalDevice: number;\n}\n\nconst DeviceDetails: React.FC<IDeviceDetails> = (props) => {\n  const { onlineDevice, normalDevice } = props;\n\n  return (\n    <Card title={'设备详情'}>\n      <div className=\"device-details-info-wrapper\">\n        <div className=\"device-details-img\" />\n        <div className=\"device-details-info\">\n          <div className=\"device-details-info-text\">\n            {DEVICE_DETAILS_INFO_TITLE}\n          </div>\n          <div className=\"device-details-info-text\">\n            {DEVICE_DETAILS_INFO_DESC}\n          </div>\n        </div>\n      </div>\n      <div className=\"device-details-number-wrapper\">\n        <DeviceProgress\n          moleculeNumber={onlineDevice}\n          denominatorNumber={DEVICE_NUMBER}\n          title={'在线设备（个数）'}\n        />\n        <DeviceProgress\n          moleculeNumber={normalDevice}\n          denominatorNumber={onlineDevice}\n          title={'正常状态设备（个数）'}\n        />\n      </div>\n    </Card>\n  );\n};\n\nexport default memo(DeviceDetails);","import { TABLE_ALARM_VALUE, ETableDataName } from './constants';\n\nexport const getCurrentData = (dataList: Array<any>, currentDevice: number) => {\n  return dataList.filter(data => {\n    return data.u_id == currentDevice;\n  });\n};\n\nexport const getAlarmData = (dataList: Array<any>) => {\n  return dataList.filter(data => {\n    return data[ETableDataName.yaw] >= TABLE_ALARM_VALUE[ETableDataName.yaw]\n      || data[ETableDataName.roll] >= TABLE_ALARM_VALUE[ETableDataName.roll]\n      || data[ETableDataName.pitch] >= TABLE_ALARM_VALUE[ETableDataName.pitch];\n  });\n};","/**\n * @file 实时数据\n * @author Felix\n */\n\nimport React, { memo, useState, useEffect, Fragment } from 'react';\nimport { Select, Table, Tag, Spin } from 'antd';\n\nimport Card from '../Card';\n\nimport { EHomeDispatchType, IHomeDispatchAction } from '../../reducer/homeReducer';\nimport { getCurrentData } from '../../common/utils';\n\nimport {\n  TABLE_TAG_COLOR,\n  ETableDataName,\n  TABLE_ALARM_VALUE\n} from '../../common/constants';\n\nimport './index.css';\n\nconst { Option } = Select;\nconst { Column } = Table;\n\ninterface IRealTimeData {\n  currentDevice: number;\n  normalDevice: number;\n  deviceDataList: Array<any>;\n  homeDispatch: React.Dispatch<IHomeDispatchAction>;\n}\n\nconst RealTimeData: React.FC<IRealTimeData> = (props) => {\n  const { currentDevice, normalDevice, deviceDataList, homeDispatch } = props;\n  const [tableData, setTableData] = useState<Array<{}>>([]);\n\n  const onSelect = (value: number) => {\n    homeDispatch({\n      type: EHomeDispatchType.SET_CURRENT_DEVICE,\n      currentDevice: value\n    });\n  };\n\n  const formatData = (deviceDataList: Array<any>, currentDevice: number) => {\n    const currentData = getCurrentData(deviceDataList, currentDevice);\n    const realTimeData = currentData[currentData.length - 1];\n    return [\n      {\n        key: '1',\n        dataName: 'yaw',\n        currentValue: realTimeData.yaw\n      },\n      {\n        key: '2',\n        dataName: 'roll',\n        currentValue: realTimeData.roll\n      },\n      {\n        key: '3',\n        dataName: 'pitch',\n        currentValue: realTimeData.pitch\n      }\n    ];\n  };\n\n  useEffect(() => {\n    if (!normalDevice || !deviceDataList.length) {\n      return;\n    }\n    setTableData([]);\n    setTimeout(() => {\n      setTableData(formatData(deviceDataList, currentDevice));\n    }, 100);\n  }, [currentDevice, normalDevice, JSON.stringify(deviceDataList)]);\n\n  return (\n    <Card title={'实时数据'}>\n      <div className=\"real-time-data-select-wrapper\">\n        <div className=\"real-time-data-select-title\">\n          从机名称：\n        </div>\n        <Select\n          value={normalDevice ? currentDevice : undefined}\n          style={{ width: 120 }}\n          onChange={onSelect}>\n          {\n            Array.from({ length: normalDevice }).map(\n              (value, index) => {\n                return (\n                  <Option\n                    key={`real-time-data-select-option-${index}`}\n                    value={index + 1}\n                  >\n                    {index + 1}号设备\n                  </Option>\n                );\n              }\n            )\n          }\n        </Select>\n      </div>\n      <div className=\"real-time-data-table-wrapper\">\n        {\n          (() => {\n            if (!normalDevice) {\n              return (\n                <div className=\"home-no-data\"/>\n              );\n            }\n            if (tableData.length) {\n              return (\n                <Table\n                  dataSource={tableData}\n                  pagination={false}\n                >\n                  <Column\n                    title=\"数据点名称\"\n                    dataIndex=\"dataName\"\n                    key=\"dataName\"\n                    render={(value: ETableDataName) => {\n                      return (\n                        <Tag color={TABLE_TAG_COLOR[value]} key={value}>\n                          {value}\n                        </Tag>\n                      );\n                    }}\n                  />\n                  <Column\n                    title=\"当前值\"\n                    dataIndex=\"currentValue\"\n                    key=\"currentValue\"\n                    render={(value, obj: {dataName: ETableDataName}) => {\n                      return (\n                        <span className={`real-time-data-table-value ${value >= TABLE_ALARM_VALUE[obj.dataName] ? 'alarm' : 'default'}`}>\n                          {value}\n                        </span>\n                      );\n                    }}\n                  />\n                  <Column\n                    title=\"报警值\"\n                    dataIndex=\"alarmValue\"\n                    key=\"alarmValue\"\n                    render={(value, obj: {dataName: ETableDataName}) => {\n                      return (\n                        <Fragment>\n                          {TABLE_ALARM_VALUE[obj.dataName]}\n                        </Fragment>\n                      );\n                    }}\n                  />\n                </Table>\n              );\n            }\n            return <Spin size=\"large\" />\n          })()\n        }\n      </div>\n    </Card>\n  );\n};\n\nexport default memo(RealTimeData);","import React, { memo } from 'react';\nimport { Pie } from '@ant-design/charts';\n\ninterface IAlarmPie {\n  pieData: Array<{type: string, value: number}>\n}\n\nconst AlarmPie: React.FC<IAlarmPie> = (props) => {\n  const { pieData } = props;\n  const _defineProperty = (obj: any, key: any, value: any) => {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true,\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  \n  const config = _defineProperty(\n    {\n      width: 500,\n      height: 344,\n      appendPadding: 10,\n      data: pieData,\n      angleField: 'value',\n      colorField: 'type',\n      radius: 0.8,\n      innerRadius: 0.6,\n      interactions: [{ type: 'element-selected' }, { type: 'element-active' }],\n      statistic: {\n        title: {\n          offsetY: -20,\n          style: { fontSize: 32 },\n          formatter: function formatter(datum: any) {\n            return datum ? datum.type : '总计';\n          },\n        },\n        content: {\n          offsetY: 30,\n          style: { fontSize: 32 },\n          formatter: function formatter(datum: any, data: any) {\n            return datum\n              ? `${datum.value}次`\n              : `${data.reduce(function (r: any, d: any) {return r + d.value;}, 0)}次`;\n          },\n        },\n      },\n    },\n    'interactions',\n    [{ type: 'pie-statistic-active' }],\n  );\n  \n  // @ts-ignore\n  return <Pie {...config} />;\n};\nexport default memo(AlarmPie);","/**\n * @file 报警记录\n * @author Felix\n */\n\nimport React, { memo, useState, useEffect, Fragment } from 'react';\nimport { Modal, Button, Tag } from 'antd';\n\nimport Card from '../Card';\nimport AlarmPie from '../AlarmPie';\n\nimport { getCurrentData, getAlarmData } from '../../common/utils';\n\nimport {\n  DEVICE_NUMBER,\n  DEVICE_COLOR,\n  TABLE_ALARM_VALUE,\n  ETableDataName,\n  TABLE_TAG_COLOR\n} from '../../common/constants';\n\nimport './index.css';\n\ninterface IAlarmRecord {\n  currentDevice: number;\n  deviceDataList: Array<any>;\n}\n\nconst AlarmRecord: React.FC<IAlarmRecord> = (props) => {\n  const { currentDevice, deviceDataList } = props;\n  const [alarmData, setAlarmData] = useState<Array<any>>([]);\n  const [modalStatus, setModalStatus] = useState<boolean>(false);\n  const [pieData, setPieData] = useState<Array<{type: string, value: number}>>([]);\n\n  useEffect(() => {\n    if (!deviceDataList.length) {\n      return;\n    }\n    const newAlarmData = getAlarmData(deviceDataList).reverse();\n    setAlarmData(newAlarmData);\n    setPieData(Array.from({ length: DEVICE_NUMBER }).map((item, index) => {\n      return {\n        type: `${index + 1}号设备`,\n        value: getCurrentData(newAlarmData, index + 1).length\n      }\n    }));\n  }, [JSON.stringify(deviceDataList)]);\n\n  return (\n    <Card title={'报警记录'}>\n      <Button\n        className=\"alarm-record-btn\"\n        type={'primary'}\n        onClick={() => setModalStatus(true)}\n      >\n        查看详情\n      </Button>\n      <div className=\"alarm-record-pie\">\n        <AlarmPie pieData={pieData} />\n      </div>\n      <Modal\n        title=\"记录详情\"\n        visible={modalStatus}\n        onCancel={() => setModalStatus(false)}\n        footer={[\n          <Button key=\"back\" onClick={() => setModalStatus(false)}>\n            关闭\n          </Button>\n        ]}\n      >\n        <div className=\"alarm-record-modal-inner\">\n          {\n            alarmData.map((item, index) => {\n              const textTag = [];\n              item[ETableDataName.pitch] >= TABLE_ALARM_VALUE[ETableDataName.pitch] && textTag.push(ETableDataName.pitch);\n              item[ETableDataName.roll] >= TABLE_ALARM_VALUE[ETableDataName.roll] && textTag.push(ETableDataName.roll);\n              item[ETableDataName.yaw] >= TABLE_ALARM_VALUE[ETableDataName.yaw] && textTag.push(ETableDataName.yaw);\n\n              return (\n                <div\n                  key={`alarm-record-modal-item-${index}`}\n                  className=\"alarm-record-modal-item\"\n                >\n                  <Tag color={DEVICE_COLOR[item.u_id - 1]}>\n                    {item.u_id}号设备\n                  </Tag>\n                  <div className=\"alarm-record-modal-item-text\">\n                    事件类型：\n                    {textTag.map(\n                      (tag, index) => {\n                        return (\n                          <Tag\n                            key={`alarm-record-modal-item-tag-${tag}-${index}`}\n                            color={TABLE_TAG_COLOR[tag]}\n                          >\n                            {ETableDataName[tag]}值\n                          </Tag>\n                          )\n                      }\n                    )}\n                    异常——输电杆塔存在倾斜情况\n                  </div>\n                  <div className=\"alarm-record-modal-item-text\">\n                    报警时间：{item.createDate}\n                  </div>\n                </div>\n              );\n            })\n          }\n        </div>\n      </Modal>\n    </Card>\n  );\n};\n\nexport default memo(AlarmRecord);","import React, { memo } from 'react';\nimport { Line } from '@ant-design/charts';\n\ninterface IHistoricalLine {\n  lineData: Array<any>\n}\n\nconst HistoricalLine: React.FC<IHistoricalLine> = (props) => {\n  const { lineData } = props;\n\n  var config = {\n    width: 560,\n    data: lineData,\n    xField: 'createDate',\n    yField: 'value',\n    seriesField: 'category',\n    yAxis: {\n      label: {\n        formatter: function formatter(v: any) {\n          return ''.concat(v).replace(/\\d{1,3}(?=(\\d{3})+$)/g, function (s) {\n            return ''.concat(s, ',');\n          });\n        },\n      },\n    },\n    color: ['#1979C9', '#D62A0D', '#FAA219'],\n  };\n  return <Line {...config} />;\n};\n\nexport default memo(HistoricalLine);","/**\n * @file 历史记录\n * @author Felix\n */\n\nimport React, { memo, useState, useEffect, Fragment } from 'react';\nimport { Spin } from 'antd';\n\nimport Card from '../Card';\nimport HistoricalLine from '../HistoricalLine';\n\nimport { getCurrentData } from '../../common/utils';\n\nimport { ETableDataName } from '../../common/constants';\n\nimport './index.css';\n\ninterface IHistoricalData {\n  normalDevice: number;\n  currentDevice: number;\n  deviceDataList: Array<any>;\n}\n\nconst HistoricalData: React.FC<IHistoricalData> = (props) => {\n  const { normalDevice, currentDevice, deviceDataList } = props;\n  const [lineData, setLineData] = useState<Array<{}>>([]);\n\n  useEffect(() => {\n    if (!deviceDataList.length) {\n      return;\n    }\n    const currentData = getCurrentData(deviceDataList, currentDevice);\n    const newLineData: Array<{}> = [];\n    for (let i = 0; i < currentData.length; i++) {\n      const { createDate, pitch, yaw, roll } = (currentData as any)[i];\n      newLineData.push({\n        createDate,\n        value: pitch,\n        category: ETableDataName['pitch']\n      });\n      newLineData.push({\n        createDate,\n        value: yaw,\n        category: ETableDataName['yaw']\n      });\n      newLineData.push({\n        createDate,\n        value: roll,\n        category: ETableDataName['roll']\n      });\n    }\n    setLineData(newLineData);\n  }, [JSON.stringify(deviceDataList), currentDevice]);\n\n  return (\n    <Card title={'历史记录'}>\n      <div className=\"historical-data-container\">\n        {(() => {\n          if (!normalDevice) {\n            return (\n              <div className=\"home-no-data\"/>\n            );\n          }\n          if (lineData.length) {\n            return (\n              <HistoricalLine lineData={lineData} />\n            );\n          }\n          return <Spin size=\"large\" />\n        })()}\n      </div>\n    </Card>\n  );\n};\n\nexport default memo(HistoricalData);","/**\n * @file 监控系统首页\n * @author Felix\n */\n\nimport React, { useReducer, useEffect, useRef } from 'react';\nimport axios from 'axios';\n\nimport Header from './components/Header';\nimport DeviceDetails from './components/DeviceDetails';\nimport RealTimeData from './components/RealTimeData';\nimport AlarmRecord from './components/AlarmRecord';\nimport HistoricalData from './components/HistoricalData';\n\nimport { HomeReducer, initalHomeState, homeReducer, EHomeDispatchType } from './reducer/homeReducer';\nimport { data } from './mock';\n\nimport './index.css';\n\nconst Home = () => {\n  const [homeState, homeDispatch] = useReducer<HomeReducer>(homeReducer, initalHomeState);\n  const loopTimer = useRef<any>(null);\n  \n  const {\n    onlineDevice = 0,\n    normalDevice = 0,\n    currentDevice = 1,\n    deviceDataList = []\n  } = homeState;\n\n  const getData = () => {\n    axios.get('http://[2001:da8:270:2020:f816:3eff:feb5:455]/tower-server/tower/getDeviceData').then(res => {\n      homeDispatch({\n        type: EHomeDispatchType.SET_DEVIECE,\n        onlineDevice: 4,\n        normalDevice: 4,\n        deviceDataList: res.data.data\n      });\n    });\n  };\n\n  useEffect(() => {\n    getData();\n\n    loopTimer.current = setInterval(() => {\n      getData();\n    }, 20000);\n\n    return () => {\n      clearInterval(loopTimer.current);\n    };\n  }, []);\n\n  return (\n    <div className=\"home-container\">\n      <Header />\n      <div className=\"home-inner\">\n        {/* 设备详情 */}\n        <DeviceDetails\n          onlineDevice={onlineDevice}\n          normalDevice={normalDevice}\n        />\n        {/* 实时数据 */}\n        <RealTimeData\n          currentDevice={currentDevice}\n          normalDevice={normalDevice}\n          deviceDataList={deviceDataList}\n          homeDispatch={homeDispatch}\n        />\n        {/* 报警记录 */}\n        <AlarmRecord\n          currentDevice={currentDevice}\n          deviceDataList={deviceDataList}\n        />\n        {/* 历史记录 */}\n        <HistoricalData\n          normalDevice={normalDevice}\n          currentDevice={currentDevice}\n          deviceDataList={deviceDataList}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './page/Home';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}